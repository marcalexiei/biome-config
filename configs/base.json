{
  "$schema": "../node_modules/@biomejs/biome/configuration_schema.json",
  "vcs": {
    "enabled": true,
    "clientKind": "git",
    "useIgnoreFile": true
  },
  "assist": {
    "actions": {
      "source": {
        "organizeImports": "on"
      }
    }
  },
  "formatter": {
    "useEditorconfig": true,
    "enabled": true,
    "lineEnding": "lf",
    "indentStyle": "space",
    "indentWidth": 2
  },
  "json": {
    "formatter": {
      "enabled": true,
      "trailingCommas": "none",
      "lineWidth": 80,
      "indentStyle": "space",
      "indentWidth": 2,
      "lineEnding": "lf"
    }
  },
  "javascript": {
    "formatter": {
      "enabled": true,
      "arrowParentheses": "always",
      "bracketSpacing": true,
      "indentWidth": 2,
      "indentStyle": "space",
      "semicolons": "always",
      "lineWidth": 80,
      "quoteStyle": "single",
      "trailingCommas": "all"
    }
  },
  "linter": {
    "domains": {
      "project": "all"
    },
    "rules": {
      "complexity": {
        "noAdjacentSpacesInRegex": "error",
        "noArguments": "error",
        "noExcessiveNestedTestSuites": "error",
        "noCommaOperator": "error",
        "noForEach": "error",
        "useOptionalChain": "error",
        "noEmptyTypeParameters": "error",
        "useRegexLiterals": "error",
        "noExcessiveCognitiveComplexity": "error",
        "noExtraBooleanCast": "error",
        "noBannedTypes": "error",
        "useSimplifiedLogicExpression": "error",
        "useSimpleNumberKeys": "error",
        "noFlatMapIdentity": "error",
        "noUselessLoneBlockStatements": "error",
        "noStaticOnlyClass": "error",
        "noUselessRename": "error",
        "useWhile": "error",
        "noThisInStatic": "error",
        "useArrowFunction": "error",
        "useDateNow": "error",
        "useLiteralKeys": "error",
        "useNumericLiterals": "error",
        "useFlatMap": "error",
        "noVoid": "error",
        "noUselessTernary": "error",
        "noUselessUndefinedInitialization": "error",
        "noUselessTypeConstraint": "error",
        "noUselessThisAlias": "error",
        "noUselessSwitchCase": "error",
        "noUselessStringRaw": "error",
        "noUselessStringConcat": "error",
        "noUselessLabel": "error",
        "noUselessCatch": "error",
        "noUselessConstructor": "error",
        "noUselessContinue": "error",
        "noUselessEmptyExport": "error",
        "noUselessEscapeInRegex": "error"
      },
      "correctness": {
        "useImportExtensions": "error",
        "noUnusedFunctionParameters": "error",
        "noUnsafeOptionalChaining": "error",
        "noUnusedLabels": "error",
        "noUnsafeFinally": "error",
        "noNonoctalDecimalEscape": "error",
        "noInvalidUseBeforeDeclaration": "error",
        "noEmptyCharacterClassInRegex": "error",
        "noStringCaseMismatch": "error",
        "noEmptyPattern": "error",
        "noPrecisionLoss": "error",
        "noSwitchDeclarations": "error",
        "noUndeclaredDependencies": "error",
        "noConstAssign": "error",
        "noConstantCondition": "error",
        "noConstantMathMinMaxClamp": "error",
        "noConstructorReturn": "error",
        "noGlobalObjectCalls": "error",
        "noInnerDeclarations": "error",
        "noInvalidConstructorSuper": "error",
        "noSelfAssign": "error",
        "noSetterReturn": "error",
        "noUnreachable": "error",
        "useYield": "error",
        "useValidForDirection": "error",
        "noUnusedVariables": "error",
        "noUnusedImports": "error",
        "noUnusedPrivateClassMembers": "error",
        "noUnreachableSuper": "error",
        "noUndeclaredVariables": "error",
        "noInvalidBuiltinInstantiation": "error",
        "useValidTypeof": "error"
      },
      "nursery": {
        "noAwaitInLoop": "error",
        "noBitwiseOperators": "error",
        "noConstantBinaryExpression": "error",
        "noExcessiveLinesPerFunction": "off",
        "noFloatingPromises": "error",
        "noGlobalDirnameFilename": "error",
        "noImplicitCoercion": "off",
        "noImportCycles": "error",
        "noMagicNumbers": "off",
        "noMisusedPromises": "error",
        "noShadow": "error",
        "noTsIgnore": "error",
        "noUnassignedVariables": "error",
        "noUselessBackrefInRegex": "error",
        "noUselessEscapeInString": "error",
        "noUselessUndefined": "error",
        "useAdjacentGetterSetter": "error",
        "useConsistentObjectDefinition": {
          "level": "error",
          "options": {
            "syntax": "shorthand"
          }
        },
        "useConsistentResponse": "error",
        "useExhaustiveSwitchCases": "error",
        "useExplicitType": "off",
        "useExportsLast": "off",
        "useIndexOf": "error",
        "useIterableCallbackReturn": "error",
        "useJsonImportAttribute": "error",
        "useNamingConvention": {
          "level": "error",
          "options": {
            "strictCase": true
          }
        },
        "useNumericSeparators": "error",
        "useObjectSpread": "error",
        "useParseIntRadix": "error",
        "useSingleJsDocAsterisk": "error",
        "useSymbolDescription": "error",
        "useUnifiedTypeSignature": "error"
      },
      "performance": {
        "noAccumulatingSpread": "error",
        "noBarrelFile": "error",
        "noDelete": "error",
        "noDynamicNamespaceImportAccess": "error",
        "noNamespaceImport": "off",
        "noReExportAll": "error",
        "useTopLevelRegex": "info"
      },
      "security": {
        "noGlobalEval": "error"
      },
      "style": {
        "noCommonJs": "error",
        "useThrowNewError": "error",
        "useThrowOnlyError": "error",
        "useTrimStartEnd": "error",
        "noEnum": "error",
        "useNamingConvention": {
          "level": "error",
          "options": {
            "strictCase": false
          }
        },
        "noYodaExpression": "error",
        "useArrayLiterals": "error",
        "noExportedImports": "error",
        "useAtIndex": "error",
        "useCollapsedElseIf": "error",
        "useBlockStatements": "error",
        "useCollapsedIf": "error",
        "useFilenamingConvention": "off",
        "noDefaultExport": "error",
        "noInferrableTypes": "error",
        "noNamespace": "error",
        "noNegationElse": "error",
        "noNestedTernary": "error",
        "noNonNullAssertion": "error",
        "noParameterAssign": "error",
        "noShoutyConstants": "error",
        "noSubstr": "error",
        "noUnusedTemplateLiteral": "error",
        "noUselessElse": "error",
        "useAsConstAssertion": "error",
        "useConst": "error",
        "useConsistentArrayType": {
          "level": "error",
          "options": {
            "syntax": "generic"
          }
        },
        "useConsistentBuiltinInstantiation": "error",
        "useConsistentMemberAccessibility": {
          "level": "error",
          "options": { "accessibility": "explicit" }
        },
        "useDefaultParameterLast": "error",
        "useDefaultSwitchClause": "error",
        "useEnumInitializers": "error",
        "useExplicitLengthCheck": "error",
        "useExportType": "error",
        "useExponentiationOperator": "error",
        "useForOf": "error",
        "useImportType": "error",
        "useLiteralEnumMembers": "error",
        "useNodejsImportProtocol": "error",
        "useNumberNamespace": "error",
        "useSelfClosingElements": "error",
        "useShorthandAssign": "error",
        "useShorthandFunctionType": "error",
        "useSingleVarDeclarator": "error",
        "useTemplate": "error"
      },
      "suspicious": {
        "noConfusingVoidType": "error",
        "noCompareNegZero": "error",
        "noConfusingLabels": "error",
        "noAsyncPromiseExecutor": "error",
        "noApproximativeNumericConstant": "error",
        "noAlert": "error",
        "noGlobalIsNan": "error",
        "noDocumentCookie": "error",
        "noConstEnum": "error",
        "noAssignInExpressions": "error",
        "noCatchAssign": "error",
        "noClassAssign": "error",
        "noDuplicateCase": "error",
        "noDoubleEquals": "error",
        "noDuplicateElseIf": "error",
        "noDuplicateClassMembers": "error",
        "noEmptyBlockStatements": "off",
        "useIsArray": "error",
        "useGetterReturn": "error",
        "noControlCharactersInRegex": "error",
        "useAwait": "error",
        "noSkippedTests": "error",
        "noDebugger": "error",
        "noShadowRestrictedNames": "error",
        "noRedeclare": "error",
        "noDuplicateParameters": "error",
        "noDuplicateObjectKeys": "error",
        "noPrototypeBuiltins": "error",
        "noTemplateCurlyInString": "error",
        "noMisleadingInstantiator": "error",
        "noExplicitAny": "error",
        "noFocusedTests": "error",
        "noGlobalAssign": "error",
        "noFunctionAssign": "error",
        "noDuplicateTestHooks": "error",
        "noVar": "error",
        "useStrictMode": "off",
        "useNumberToFixedDigitsArgument": "error",
        "noConsole": "error",
        "noUnsafeDeclarationMerging": "error",
        "noThenProperty": "error",
        "useNamespaceKeyword": "off",
        "useGuardForIn": "off",
        "noUnsafeNegation": "error",
        "useGoogleFontDisplay": "error",
        "useErrorMessage": "error",
        "noRedundantUseStrict": "error",
        "noMisplacedAssertion": "error",
        "noExportsInTest": "error",
        "noEvolvingTypes": "error"
      }
    }
  },
  "overrides": [
    {
      "includes": ["**/{vite,vitest}.config.ts", "**/.vitepress/config.ts"],
      "linter": {
        "rules": {
          "style": {
            "noDefaultExport": "off"
          }
        }
      }
    },
    {
      "includes": ["**/*.spec.{ts,tsx}"],
      "linter": {
        "rules": {
          "style": {
            "useNamingConvention": {
              "level": "error",
              "options": {
                "strictCase": false,
                "conventions": [
                  {
                    "selector": {
                      "kind": "objectLiteralProperty"
                    },
                    "formats": ["PascalCase", "camelCase"]
                  },
                  {
                    "selector": {
                      "kind": "typeProperty"
                    },
                    "formats": ["PascalCase", "camelCase"]
                  }
                ]
              }
            }
          }
        }
      }
    }
  ]
}
